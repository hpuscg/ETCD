
====task：
Let's set the first key-value pair in the datastore. In this case the key is /message and the value is Hello world.


====command：
curl http://127.0.0.1:2379/v2/keys/message -XPUT -d value="Hello world"

====result：
{
    "action": "set",
    "node": {
        "createdIndex": 2,
        "key": "/message",
        "modifiedIndex": 2,
        "value": "Hello world"
    }
}

====options
The response object contains several attributes:

    1、action: the action of the request that was just made. The request attempted to modify node.value via a PUT HTTP request,
thus the value of action is set.

    2、node.key: the HTTP path to which the request was made. We set /message to Hello world, so the key field is /message.
etcd uses a file-system-like structure to represent the key-value pairs, therefore all keys start with /.

    3、node.value: the value of the key after resolving the request. In this case, a successful request was made that attempted
to change the node's value to Hello world.

    4、node.createdIndex: an index is a unique, monotonically-incrementing integer created for each change to etcd. 
This specific index reflects the point in the etcd state member at which a given key was created. 
You may notice that in this example the index is 2 even though it is the first request you sent to the server.
This is because there are internal commands that also change the state behind the scenes, like adding and syncing servers.

    5、node.modifiedIndex: like node.createdIndex, this attribute is also an etcd index.
Actions that cause the value to change include set, delete, update, create, compareAndSwap and compareAndDelete. 
Since the get and watch commands do not change state in the store, they do not change the value of node.modifiedIndex.


